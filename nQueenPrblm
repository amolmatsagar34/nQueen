public class nQueenAI {
     
    public static void nQueen(char board[][] ,int row) { // checking within the particular row to check SAFE PLACE 
        int n = board.length;
        if(row==n){ //base case - print the result ie board 
           for(int i=0;i<n;i++){
              for(int j=0;j<n;j++){
                System.out.print(board[i][j]);
              }
            System.out.println();
           }
         System.out.println();
         return; //imp
        }


        //Recursion -WORK AND CALL
        for(int j=0;j<n;j++){ // j is column 
            if(isSafe(board,row,j)){
                board[row][j]='Q';
                nQueen(board, row+1); //rec
                board[row][j]='X';// backtracking , if the solution at first didnt configure 
            }
        }
    }


    public static boolean isSafe(char board[][], int row , int col){
        int n = board.length;
        //check row -> EAST AND WEST
        for(int j=0; j<n;j++){
            if(board[row][j]=='Q'){return false;}
        }
        
        //check col -> NORTH AND SOUTH 
        for(int i=0; i<n;i++){
            if(board[i][col]=='Q'){return false;}
        }
// ------------------------
        //CHECK NORTH EAST 
         int i = row;
         int j=col;
         while(i>=0 && j<n){
            if(board[i][j]=='Q'){return false;}
            i--;
            j++;
         }  

        
        //CHECK SOUTH EAST 
         i = row;
         j=col;
        while(i>n && j<n){
           if(board[i][j]=='Q'){return false;}
           i++;
           j++;
        } 
        
        //CHECK south west 
        i= row;
        j=col;
        while(i<n && j>=0){
            if(board[i][j]=='Q'){return false;}
            i++;
            j--;
        }

        //CHECK north west
            i = row;
            j=col;
           while(i>=0 && j>=0){
              if(board[i][j]=='Q'){return false;}
              i--;
              j--;
           }  
        return true;
    }



    public static void main(String[] args) {
        int n=6;
        char board[][]= new char[n][n];
// first initialze all the boxes with x 
        for (int i =0; i<n; i++) {
            for(int j=0;j<n;j++){
                board[i][j]='X';
            }
        }
        nQueen(board,0);
    }
}
